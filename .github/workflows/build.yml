name: Build release pack 

on:

  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.29.0'
  RUST_VERSION: "1.84.1"
  APK_BUILD_DIR: ${{ github.workspace }}/build_artifacts  # 改为绝对路径

jobs:
  build:
    name: Cross-Platform Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platforms: linux
            cache-suffix: linux
          - os: windows-latest
            platforms: windows,android
            cache-suffix: win
          - os: macos-latest
            platforms: ios,macos
            cache-suffix: mac
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Get version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(sed -n 's/^version: \([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p' pubspec.yaml)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # 全局缓存层 --------------------------------------------------
      - name: Cache Flutter SDK
        uses: actions/cache@v3
        id: flutter-cache
        with:
          path: ${{ github.workspace }}/.flutter-sdk
          key: flutter-${{ matrix.cache-suffix }}-${{ env.FLUTTER_VERSION }}

      - name: Cache Pub Dependencies
        uses: actions/cache@v3
        id: pub-cache
        with:
          path: |
            ~/.pub-cache
            ${{ github.workspace }}/.flutter-sdk/.pub-cache
          key: pub-${{ hashFiles('pubspec.lock') }}

      # 平台专属缓存层 -----------------------------------------------
      # Linux 专属缓存
      - name: Cache APT Packages
        if: contains(matrix.platforms, 'linux')
        uses: actions/cache@v3
        id: apt-cache
        with:
          path: /var/cache/apt/archives
          key: apt-${{ matrix.cache-suffix }}-${{ hashFiles('**/apt-deps.txt') }}

      # Android 专属缓存
      - name: Cache Gradle
        if: contains(matrix.platforms, 'android')
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ matrix.cache-suffix }}-${{ hashFiles('**/gradle-wrapper.properties') }}

      # iOS 专属缓存
      - name: Cache CocoaPods
        if: contains(matrix.platforms, 'ios')
        uses: actions/cache@v3
        with:
          path: |
            ios/Pods
            ~/.cocoapods
          key: pods-${{ matrix.cache-suffix }}-${{ hashFiles('**/Podfile.lock') }}

      # 环境设置层 --------------------------------------------------
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: ${{ steps.flutter-cache.outputs.cache-hit != 'true' }}
          cache-key: flutter-${{ matrix.cache-suffix }}-${{ env.FLUTTER_VERSION }}
          cache-path: ${{ github.workspace }}/.flutter-sdk

      # 依赖安装层 --------------------------------------------------
      - name: Install Linux Dependencies
        if: contains(matrix.platforms, 'linux')
        run: |
          mkdir -p "${{ env.BUILD_DIR }}"
          sudo apt-get update
          sudo apt-get install -y clang cmake libgtk-3-dev ninja-build libayatana-appindicator3-dev
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Setup Java for Android
        if: contains(matrix.platforms, 'android')
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: ${{ env.RUST_VERSION }}

      - name: Check rust-toolchain.toml
        working-directory: ${{ env.APK_BUILD_DIR }}
        run: rustup show

      # 构建层 ------------------------------------------------------
      - name: Build All Platforms
        shell: bash
        run: |
          # 公共前置操作
          flutter pub get
          
          # Android 构建
          if [[ "${{ matrix.platforms }}" == *android* ]]; then
            - name: Copy files to env.APK_BUILD_DIR
              run: |
                mkdir -p $APK_BUILD_DIR
                cp -r . $APK_BUILD_DIR
      
            - name: Decode key.properties file
              working-directory: ${{ env.APK_BUILD_DIR }}
              env:
                ENCODED_STRING: ${{ secrets.ANDROID_KEY_PROPERTIES }}
              run: echo $ENCODED_STRING | base64 -di > app/android/key.properties
      
            - name: Decode android-keystore.jks file
              working-directory: ${{ env.APK_BUILD_DIR }}
              env:
                ENCODED_STRING: ${{ secrets.ANDROID_KEY_STORE }}
              run: mkdir secrets && echo $ENCODED_STRING | base64 -di > secrets/android-keystore.jks
            
            - name: Build APK
              working-directory: ${{ env.APK_BUILD_DIR }}
              run: flutter build apk --split-per-abi
      
            - name: Upload APK
              uses: actions/upload-artifact@v4
              with:
                name: apk-result
                path: |
                  ${{ env.APK_BUILD_DIR }}/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
                  ${{ env.APK_BUILD_DIR }}/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
                  ${{ env.APK_BUILD_DIR }}/build/app/outputs/flutter-apk/app-x86_64-release.apk

          fi

          # iOS 构建
          if [[ "${{ matrix.platforms }}" == *ios* ]]; then
            echo "🛠 Building iOS..."
            flutter build ios --release --no-codesign
            mkdir -p "${{ env.BUILD_DIR }}/Payload"
            mv build/ios/iphoneos/Runner.app "${{ env.BUILD_DIR }}/Payload/"
            (cd "${{ env.BUILD_DIR }}" && zip -r "app-${{ github.ref_name }}.ipa" Payload)
          fi
      
          # Windows 构建
          if [[ "${{ matrix.platforms }}" == *windows* ]]; then
            echo "🛠 Building Windows..."
            - name: Fix long file paths
              run: git config --system core.longpaths true
            
            flutter build windows
            7z a "${{ env.BUILD_DIR }}/app-${{ github.ref_name }}-windows.zip" \
              "build/windows/x64/runner/Release/*"
          fi
      
          # macOS 构建
          if [[ "${{ matrix.platforms }}" == *macos* ]]; then
            echo "🛠 Building macOS..."
            flutter build macos
            (cd build/macos/Build/Products/Release && \
              zip -r "${{ env.BUILD_DIR }}/app-${{ github.ref_name }}-macos.zip" *.app)
          fi
      
          # Linux 构建
          if [[ "${{ matrix.platforms }}" == *linux* ]]; then
            echo "🛠 Building Linux..."
            - name: Compile linux
              working-directory: lib
              run: flutter build linux
      
            - name: Create tar.gz archive
              run: |
                cd app/build/linux/x64/release/bundle
                tar -czvf ../../../../../result.tar.gz *

            - name: Upload tar.gz archive
              uses: actions/upload-artifact@v4
              with:
                name: tar-gz-x86-64-result
                path: ./app/*.tar.gz
                
            - name: Enable dart_distributor
              run: dart pub global activate flutter_distributor
      
            - name: Update PATH
              run: echo 'export PATH="$PATH:$HOME/.pub-cache/bin"' >> ~/.bashrc
      
            - name: Build deb package
              working-directory: lib
              run: flutter_distributor package --platform linux --targets deb
      
            - name: Find deb file
              id: find_deb
              run: |
                VERSION=${{ needs.build.outputs.version }}
                DEB_PATH=$(find app/dist -name "lantransmission_app-$VERSION*-linux.deb")
                echo "deb_path=$DEB_PATH" >> $GITHUB_OUTPUT
      
            - name: Check if deb file exists
              id: check_file
              run: |
                if [[ ! -f "${{ steps.find_deb.outputs.deb_path }}" ]]; then
                  echo "File not found: ${{ steps.find_deb.outputs.deb_path }}"
                  exit 1
                fi

            - name: Upload deb file
              uses: actions/upload-artifact@v4
              with:
                name: deb-x86-64-result
                path: ${{ steps.find_deb.outputs.deb_path }}
          fi

      
